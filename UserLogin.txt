[HttpPost]
[AllowAnonymous]
[ValidateAntiForgeryToken]
public ActionResult Login(LoginModel model, string returnUrl)
{
    if (_userRepository.AuthenticateUser(model.UserName, model.Password))
    {
        FormsAuthentication.SetAuthCookie(model.UserName, model.RememberMe);
        if (Url.IsLocalUrl(returnUrl) && returnUrl != "/")
        {
            Redirect(returnUrl);
        }
        return RedirectToAction("Index", "Home");
    }
    ModelState.AddModelError("", "Email or password is incorrect");
    return View(model);
}


[HttpPost]
[AllowAnonymous]
[ValidateAntiForgeryToken]
public ActionResult Register(RegisterModel model)
{
    if (ModelState.IsValid)
    {
        // Attempt to register the user
        try
        {
            var user = new User(model.Email, model.DisplayName, _userRepository);
            _userRepository.CreateNewUser(user, model.Password);
            _userRepository.AuthenticateUser(model.Email, model.ConfirmPassword);
            return RedirectToAction("Index", "Home");
        }
        catch (MembershipCreateUserException e)
        {
            ModelState.AddModelError("", ErrorCodeToString(e.StatusCode));
        }
    }

    // If we got this far, something failed, redisplay form
    return View(model);
}


[HttpPost]
[ValidateAntiForgeryToken]
public ActionResult Manage(LocalPasswordModel model)
{
    ViewBag.ReturnUrl = Url.Action("Manage");
    if (ModelState.IsValid)
    {
        ChangePassswordMessage changePasswordMessage;
        try
        {
            changePasswordMessage =
                _userRepository.ChangePassword(User.Identity.Name, model.OldPassword, model.NewPassword,
                    model.ConfirmPassword);
        }
        catch (Exception)
        {
            changePasswordMessage = ChangePassswordMessage.Error;
        }

        if (changePasswordMessage == ChangePassswordMessage.PasswordChanged)
        {
            return RedirectToAction("Manage", new { Message = ManageMessageId.ChangePasswordSuccess });
        }
        ModelState.AddModelError("",
            changePasswordMessage == ChangePassswordMessage.Error
                ? "An error occured, please reload the page and try again"
                : changePasswordMessage == ChangePassswordMessage.NewPasswordsDontMatch
                    ? "The new password and the confirm password didn't match"
                    : changePasswordMessage == ChangePassswordMessage.OldAndNewIdentical
                        ? "The old and new password can't be identical"
                        : "Your old password was incorrect");
    }
    return View(model);
}
